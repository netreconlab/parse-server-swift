{
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is an implementation of a logging backend.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:7Logging10LogHandlerP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "LogHandler"
      }
    ],
    "modules" : [
      {
        "name" : "Logging"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "LogHandler"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "LogHandler"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "LogHandler"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "_SwiftLogSendableLogHandler"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This type is an implementation detail and should not normally be used, unless implementing your own logging backend.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "To use the SwiftLog API, please refer to the documentation of ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/Logger",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Implementation-requirements",
          "level" : 1,
          "text" : "Implementation requirements",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To implement your own ",
              "type" : "text"
            },
            {
              "code" : "LogHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " you should respect a few requirements that are necessary so applications work",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "as expected regardless of the selected ",
              "type" : "text"
            },
            {
              "code" : "LogHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " implementation.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "The ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : " must be a ",
                      "type" : "text"
                    },
                    {
                      "code" : "struct",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "The metadata and ",
                      "type" : "text"
                    },
                    {
                      "code" : "logLevel",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " properties must be implemented so that setting them on a ",
                      "type" : "text"
                    },
                    {
                      "code" : "Logger",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " does not affect",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "other ",
                      "type" : "text"
                    },
                    {
                      "code" : "Logger",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : "s.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "Treat-log-level--metadata-as-values",
          "level" : 3,
          "text" : "Treat log level & metadata as values",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "When developing your ",
              "type" : "text"
            },
            {
              "code" : "LogHandler",
              "type" : "codeVoice"
            },
            {
              "text" : ", please make sure the following test works.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "LoggingSystem.bootstrap(MyLogHandler.init) \/\/ your LogHandler might have a different bootstrapping step",
            "var logger1 = Logger(label: \"first logger\")",
            "logger1.logLevel = .debug",
            "logger1[metadataKey: \"only-on\"] = \"first\"",
            "",
            "var logger2 = logger1",
            "logger2.logLevel = .error                  \/\/ this must not override `logger1`'s log level",
            "logger2[metadataKey: \"only-on\"] = \"second\" \/\/ this must not override `logger1`'s metadata",
            "",
            "XCTAssertEqual(.debug, logger1.logLevel)",
            "XCTAssertEqual(.error, logger2.logLevel)",
            "XCTAssertEqual(\"first\", logger1[metadataKey: \"only-on\"])",
            "XCTAssertEqual(\"second\", logger2[metadataKey: \"only-on\"])"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Special-cases",
          "level" : 3,
          "text" : "Special cases",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In certain special cases, the log level behaving like a value on ",
              "type" : "text"
            },
            {
              "code" : "Logger",
              "type" : "codeVoice"
            },
            {
              "text" : " might not be what you want. For example,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "you might want to set the log level across ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "all",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Logger",
              "type" : "codeVoice"
            },
            {
              "text" : "s to ",
              "type" : "text"
            },
            {
              "code" : ".debug",
              "type" : "codeVoice"
            },
            {
              "text" : " when say a signal (eg. ",
              "type" : "text"
            },
            {
              "code" : "SIGUSR1",
              "type" : "codeVoice"
            },
            {
              "text" : ") is received",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to be able to debug special failures in production. This special case is acceptable but we urge you to create a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "solution specific to your ",
              "type" : "text"
            },
            {
              "code" : "LogHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " implementation to achieve that. Please find an example implementation of this",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "behavior below, on reception of the signal you would call",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "LogHandlerWithGlobalLogLevelOverride.overrideGlobalLogLevel = .debug",
              "type" : "codeVoice"
            },
            {
              "text" : ", for example.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "import class Foundation.NSLock",
            "",
            "public struct LogHandlerWithGlobalLogLevelOverride: LogHandler {",
            "    \/\/ the static properties hold the globally overridden log level (if overridden)",
            "    private static let overrideLock = NSLock()",
            "    private static var overrideLogLevel: Logger.Level? = nil",
            "",
            "    \/\/ this holds the log level if not overridden",
            "    private var _logLevel: Logger.Level = .info",
            "",
            "    \/\/ metadata storage",
            "    public var metadata: Logger.Metadata = [:]",
            "",
            "    public init(label: String) {",
            "        \/\/ [...]",
            "    }",
            "",
            "    public var logLevel: Logger.Level {",
            "        \/\/ when we get asked for the log level, we check if it was globally overridden or not",
            "        get {",
            "            LogHandlerWithGlobalLogLevelOverride.overrideLock.lock()",
            "            defer { LogHandlerWithGlobalLogLevelOverride.overrideLock.unlock() }",
            "            return LogHandlerWithGlobalLogLevelOverride.overrideLogLevel ?? self._logLevel",
            "        }",
            "        \/\/ we set the log level whenever we're asked (note: this might not have an effect if globally",
            "        \/\/ overridden)",
            "        set {",
            "            self._logLevel = newValue",
            "        }",
            "    }",
            "",
            "    public func log(level: Logger.Level, message: Logger.Message, metadata: Logger.Metadata?,",
            "                    source: String, file: String, function: String, line: UInt) {",
            "        \/\/ [...]",
            "    }",
            "",
            "    public subscript(metadataKey metadataKey: String) -> Logger.Metadata.Value? {",
            "        get {",
            "            return self.metadata[metadataKey]",
            "        }",
            "        set(newValue) {",
            "            self.metadata[metadataKey] = newValue",
            "        }",
            "    }",
            "",
            "    \/\/ this is the function to globally override the log level, it is not part of the `LogHandler` protocol",
            "    public static func overrideGlobalLogLevel(_ logLevel: Logger.Level) {",
            "        LogHandlerWithGlobalLogLevelOverride.overrideLock.lock()",
            "        defer { LogHandlerWithGlobalLogLevelOverride.overrideLock.unlock() }",
            "        LogHandlerWithGlobalLogLevelOverride.overrideLogLevel = logLevel",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Please note that the above ",
              "type" : "text"
            },
            {
              "code" : "LogHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " will still pass the ‘log level is a value’ test above it iff the global log",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "level has not been overridden. And most importantly it passes the requirement listed above: A change to the log",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "level on one ",
              "type" : "text"
            },
            {
              "code" : "Logger",
              "type" : "codeVoice"
            },
            {
              "text" : " should not affect the log level of another ",
              "type" : "text"
            },
            {
              "code" : "Logger",
              "type" : "codeVoice"
            },
            {
              "text" : " variable.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/MultiplexLogHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/StreamLogHandler",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/SwiftLogNoOpLogHandler"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/logLevel",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/metadata",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/metadataProvider-1vq31"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/log(level:message:metadata:file:function:line:)-89rya",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/log(level:message:metadata:source:file:function:line:)-8kgt7"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Subscripts",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/subscript(metadataKey:)"
      ],
      "title" : "Subscripts"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/logging\/loghandler"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Logging",
  "type" : "topic",
  "url" : "\/documentation\/logging"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/LogHandler": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is an implementation of a logging backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogHandler"
    }
  ],
  "role" : "symbol",
  "title" : "LogHandler",
  "type" : "topic",
  "url" : "\/documentation\/logging\/loghandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/LogHandler/log(level:message:metadata:file:function:line:)-89rya": {
  "abstract" : [
    {
      "text" : "SwiftLog 1.0 compatibility method. Please do ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "not",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " implement, implement",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "log(level:message:metadata:source:file:function:line:)",
      "type" : "codeVoice"
    },
    {
      "text" : " instead.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "log"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "level"
    },
    {
      "kind" : "text",
      "text" : ": Logging"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV5LevelO",
      "text" : "Level"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "message"
    },
    {
      "kind" : "text",
      "text" : ": Logging"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV7MessageV",
      "text" : "Message"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "metadata"
    },
    {
      "kind" : "text",
      "text" : ": Logging"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV8Metadataa",
      "text" : "Metadata"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "function"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/log(level:message:metadata:file:function:line:)-89rya",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "log(level:message:metadata:file:function:line:)",
  "type" : "topic",
  "url" : "\/documentation\/logging\/loghandler\/log(level:message:metadata:file:function:line:)-89rya"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/LogHandler/log(level:message:metadata:source:file:function:line:)-8kgt7": {
  "abstract" : [
    {
      "text" : "This method is called when a ",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " must emit a log message. There is no need for the ",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "check if the ",
      "type" : "text"
    },
    {
      "code" : "level",
      "type" : "codeVoice"
    },
    {
      "text" : " is above or below the configured ",
      "type" : "text"
    },
    {
      "code" : "logLevel",
      "type" : "codeVoice"
    },
    {
      "text" : " as ",
      "type" : "text"
    },
    {
      "code" : "Logger",
      "type" : "codeVoice"
    },
    {
      "text" : " already performed this check and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "determined that a message should be logged.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "log"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "level"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV5LevelO",
      "text" : "Level"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "message"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV7MessageV",
      "text" : "Message"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "metadata"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV8Metadataa",
      "text" : "Metadata"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "source"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "function"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/log(level:message:metadata:source:file:function:line:)-8kgt7",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "log(level:message:metadata:source:file:function:line:)",
  "type" : "topic",
  "url" : "\/documentation\/logging\/loghandler\/log(level:message:metadata:source:file:function:line:)-8kgt7"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/LogHandler/logLevel": {
  "abstract" : [
    {
      "text" : "Get or set the configured log level.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "logLevel"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV5LevelO",
      "text" : "Level"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/logLevel",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "logLevel",
  "type" : "topic",
  "url" : "\/documentation\/logging\/loghandler\/loglevel"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/LogHandler/metadata": {
  "abstract" : [
    {
      "text" : "Get or set the entire metadata storage as a dictionary.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "metadata"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV8Metadataa",
      "text" : "Metadata"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/metadata",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "metadata",
  "type" : "topic",
  "url" : "\/documentation\/logging\/loghandler\/metadata"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/LogHandler/metadataProvider-1vq31": {
  "abstract" : [
    {
      "text" : "The metadata provider this ",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " will use when a log statement is about to be emitted.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "metadataProvider"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV16MetadataProviderV",
      "text" : "MetadataProvider"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/metadataProvider-1vq31",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "metadataProvider",
  "type" : "topic",
  "url" : "\/documentation\/logging\/loghandler\/metadataprovider-1vq31"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/LogHandler/subscript(metadataKey:)": {
  "abstract" : [
    {
      "text" : "Add, remove, or change the logging metadata.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "metadataKey"
    },
    {
      "kind" : "text",
      "text" : " _: "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV",
      "text" : "Logger"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Logging6LoggerV8Metadataa",
      "text" : "Metadata"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SD5Valuea",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/LogHandler\/subscript(metadataKey:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "subscript(metadataKey:)",
  "type" : "topic",
  "url" : "\/documentation\/logging\/loghandler\/subscript(metadatakey:)"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/Logger": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "Logger",
      "type" : "codeVoice"
    },
    {
      "text" : " is the central type in ",
      "type" : "text"
    },
    {
      "code" : "SwiftLog",
      "type" : "codeVoice"
    },
    {
      "text" : ". Its central function is to emit log messages using one of the methods",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "corresponding to a log level.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Logger"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/Logger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Logger"
    }
  ],
  "role" : "symbol",
  "title" : "Logger",
  "type" : "topic",
  "url" : "\/documentation\/logging\/logger"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/MultiplexLogHandler": {
  "abstract" : [
    {
      "text" : "A pseudo-",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be used to send messages to multiple other ",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : "s.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MultiplexLogHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/MultiplexLogHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MultiplexLogHandler"
    }
  ],
  "role" : "symbol",
  "title" : "MultiplexLogHandler",
  "type" : "topic",
  "url" : "\/documentation\/logging\/multiplexloghandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/StreamLogHandler": {
  "abstract" : [
    {
      "code" : "StreamLogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " is a simple implementation of ",
      "type" : "text"
    },
    {
      "code" : "LogHandler",
      "type" : "codeVoice"
    },
    {
      "text" : " for directing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Logger",
      "type" : "codeVoice"
    },
    {
      "text" : " output to either ",
      "type" : "text"
    },
    {
      "code" : "stderr",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "stdout",
      "type" : "codeVoice"
    },
    {
      "text" : " via the factory methods.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamLogHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/StreamLogHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StreamLogHandler"
    }
  ],
  "role" : "symbol",
  "title" : "StreamLogHandler",
  "type" : "topic",
  "url" : "\/documentation\/logging\/streamloghandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Logging/SwiftLogNoOpLogHandler": {
  "abstract" : [
    {
      "text" : "No operation LogHandler, used when no logging is required",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SwiftLogNoOpLogHandler"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Logging\/SwiftLogNoOpLogHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SwiftLogNoOpLogHandler"
    }
  ],
  "role" : "symbol",
  "title" : "SwiftLogNoOpLogHandler",
  "type" : "topic",
  "url" : "\/documentation\/logging\/swiftlognooploghandler"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}