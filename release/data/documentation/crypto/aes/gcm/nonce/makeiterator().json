{
  "abstract" : [
    {
      "text" : "Inherited from ",
      "type" : "text"
    },
    {
      "code" : "Sequence.makeIterator()",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES\/GCM",
        "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES\/GCM\/Nonce"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES\/GCM\/Nonce\/makeIterator()"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9CryptoKit3AESO3GCMO5NonceV12makeIterators08IndexingG0VySays5UInt8VGGyF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "makeIterator"
      },
      {
        "kind" : "text",
        "text" : "() -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sa",
        "text" : "Array"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s5UInt8V",
        "text" : "UInt8"
      },
      {
        "kind" : "text",
        "text" : ">."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sa8Iteratora",
        "text" : "Iterator"
      }
    ],
    "modules" : [
      {
        "name" : "Crypto"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "Mac Catalyst",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "makeIterator()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "makeIterator"
            },
            {
              "kind" : "text",
              "text" : "() -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sa",
              "text" : "Array"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s5UInt8V",
              "text" : "UInt8"
            },
            {
              "kind" : "text",
              "text" : ">."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sa8Iteratora",
              "text" : "Iterator"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/crypto\/aes\/gcm\/nonce\/makeiterator()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Crypto": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Crypto",
  "type" : "topic",
  "url" : "\/documentation\/crypto"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Crypto/AES": {
  "abstract" : [
    {
      "text" : "A container for Advanced Encryption Standard (AES) ciphers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AES"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AES"
    }
  ],
  "role" : "symbol",
  "title" : "AES",
  "type" : "topic",
  "url" : "\/documentation\/crypto\/aes"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Crypto/AES/GCM": {
  "abstract" : [
    {
      "text" : "The Advanced Encryption Standard (AES) Galois Counter Mode (GCM) cipher",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "suite.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "GCM"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES\/GCM",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "GCM"
    }
  ],
  "role" : "symbol",
  "title" : "AES.GCM",
  "type" : "topic",
  "url" : "\/documentation\/crypto\/aes\/gcm"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Crypto/AES/GCM/Nonce": {
  "abstract" : [
    {
      "text" : "A value used once during a cryptographic operation and then discarded.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Nonce"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES\/GCM\/Nonce",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Nonce"
    }
  ],
  "role" : "symbol",
  "title" : "AES.GCM.Nonce",
  "type" : "topic",
  "url" : "\/documentation\/crypto\/aes\/gcm\/nonce"
},
"doc://edu.uky.cs.netreconlab.ParseServerSwift/documentation/Crypto/AES/GCM/Nonce/makeIterator()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "makeIterator"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sa",
      "text" : "Array"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5UInt8V",
      "text" : "UInt8"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sa8Iteratora",
      "text" : "Iterator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseServerSwift\/documentation\/Crypto\/AES\/GCM\/Nonce\/makeIterator()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "makeIterator()",
  "type" : "topic",
  "url" : "\/documentation\/crypto\/aes\/gcm\/nonce\/makeiterator()"
}
}
}